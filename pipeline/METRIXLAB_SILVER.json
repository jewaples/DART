{
	"name": "METRIXLAB_SILVER",
	"properties": {
		"activities": [
			{
				"name": "METRIXLAB_BRAND_FILTER",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "TRUNCATE_AND_PATTERN_VALUES",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "DelimitedTextSource",
						"storeSettings": {
							"type": "AzureBlobFSReadSettings",
							"recursive": true,
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "DelimitedTextReadSettings"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false,
						"disableMetricsCollection": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "Brand",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "Brand",
									"type": "String",
									"physicalType": "nvarchar"
								}
							},
							{
								"source": {
									"name": "Brand_Group",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "Brand_Group",
									"type": "String",
									"physicalType": "nvarchar"
								}
							},
							{
								"source": {
									"name": "Category",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "Category",
									"type": "String",
									"physicalType": "nvarchar"
								}
							},
							{
								"source": {
									"name": "Default_",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "Default_",
									"type": "String",
									"physicalType": "nvarchar"
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "METRIXLAB_Source",
						"type": "DatasetReference",
						"parameters": {
							"env": "dev",
							"path": "Metrixlab_Brand_Map",
							"file": "Brand_Filter.csv"
						}
					}
				],
				"outputs": [
					{
						"referenceName": "METRIXLAB_BRAND_FILTER",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "TRUNCATE_AND_PATTERN_VALUES",
				"type": "Script",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "NAM_COM_DART_SQL",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": "TRUNCATE TABLE METRIX.METRIXLAB_BRAND_FILTER;\nINSERT INTO METRIX.METRIXLAB_BRAND_FILTER\nVALUES ('None','None','None',NULL)"
						}
					]
				}
			},
			{
				"name": "METRIXLAB_STARSCHEMA",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "METRIXLAB_BRAND_FILTER",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[METRIX].[METRIXLAB_STARSCHEMA]"
				},
				"linkedServiceName": {
					"referenceName": "NAM_COM_DART_SQL",
					"type": "LinkedServiceReference"
				}
			}
		],
		"variables": {
			"Var": {
				"type": "String",
				"defaultValue": "1"
			}
		},
		"folder": {
			"name": "METRIXLAB"
		},
		"annotations": [],
		"lastPublishTime": "2022-06-30T16:42:08Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}