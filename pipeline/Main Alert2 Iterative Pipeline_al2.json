{
	"name": "Main Alert2 Iterative Pipeline_al2",
	"properties": {
		"activities": [
			{
				"name": "Dataset Validation",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "Cluster Validation",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "Input validation_al2",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true
				}
			},
			{
				"name": "Validation Fail Notification",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "Dataset Validation",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "Email notification",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"receiver": {
							"value": "@pipeline().parameters.receiver",
							"type": "Expression"
						},
						"message": {
							"value": "@concat('Alert2 pipeline has failed :', activity('Dataset Validation').error.message)",
							"type": "Expression"
						},
						"title": "PIPELINE RUN FAILED",
						"color": "Red",
						"pipelineName": {
							"value": "@pipeline().Pipeline",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "For Each Market Notebook",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "Dataset Validation",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "For Each Market_al2",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"market_list": {
							"value": "@pipeline().parameters.market_list",
							"type": "Expression"
						},
						"root": "/mnt/dartread/EDW/AA/ALERTS/ALERT2",
						"stage": {
							"value": "@pipeline().parameters.stage",
							"type": "Expression"
						},
						"folder": {
							"value": "@pipeline().parameters.folder",
							"type": "Expression"
						},
						"guardrail_spec": {
							"value": "@pipeline().parameters.guardrail_spec",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "Join Market Dataframes",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "For Each Market Notebook",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "Join A2 datasets_al2",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"stage": {
							"value": "@concat('/',pipeline().parameters.stage)",
							"type": "Expression"
						},
						"folder": {
							"value": "@pipeline().parameters.folder",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "For each Market Iteration Fail Notification",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "For Each Market Notebook",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "Email notification",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"receiver": {
							"value": "@pipeline().parameters.receiver",
							"type": "Expression"
						},
						"message": {
							"value": "@concat('Alert2 pipeline has failed :', activity('For Each Market Notebook').error.message)",
							"type": "Expression"
						},
						"title": "PIPELINE RUN FAILED",
						"color": "Red",
						"pipelineName": {
							"value": "@pipeline().Pipeline",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "Join Market Dataframe Fail Notification",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "Join Market Dataframes",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "Email notification",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"receiver": {
							"value": "@pipeline().parameters.receiver",
							"type": "Expression"
						},
						"message": {
							"value": "@concat('Alert2 pipeline has failed :', activity('Join Market Dataframes').error.message)",
							"type": "Expression"
						},
						"title": "PIPELINE RUN FAILED",
						"color": "Red",
						"pipelineName": {
							"value": "@pipeline().Pipeline",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "Join Market Dataframe Success Notification",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "Join Market Dataframes",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "Email notification",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"receiver": {
							"value": "@pipeline().parameters.receiver",
							"type": "Expression"
						},
						"message": "Alert2 pipeline run successfully",
						"title": "PIPELINE RUN FINISHED",
						"color": "Green",
						"pipelineName": {
							"value": "@pipeline().Pipeline",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "Cluster Validation",
				"type": "ExecutePipeline",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "Cluster validation_al2",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"stage": {
							"value": "@pipeline().parameters.stage",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "Cluseter Validation Fail Notification",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "Cluster Validation",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "Email notification",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"receiver": {
							"value": "@pipeline().parameters.receiver",
							"type": "Expression"
						},
						"message": {
							"value": "@concat('Alert2 pipeline has failed :', activity('Cluster Validation').error.message)",
							"type": "Expression"
						},
						"title": "PIPELINE RUN FAILED",
						"color": "Red",
						"pipelineName": {
							"value": "@pipeline().Pipeline",
							"type": "Expression"
						}
					}
				}
			}
		],
		"parameters": {
			"market_list": {
				"type": "array",
				"defaultValue": [
					"Texas",
					"Florida",
					"Massachusetts",
					"New Hampshire",
					"Arizona",
					"Maryland",
					"Washington",
					"Indiana",
					"Maine",
					"Louisiana",
					"Missouri",
					"Delaware",
					"Oklahoma",
					"South Carolina",
					"Kentucky",
					"Metro New York"
				]
			},
			"receiver": {
				"type": "string",
				"defaultValue": "emilio.piotto@accenture.com"
			},
			"stage": {
				"type": "string",
				"defaultValue": "DEV"
			},
			"folder": {
				"type": "string",
				"defaultValue": "/STAGE"
			},
			"guardrail_spec": {
				"type": "string",
				"defaultValue": "Price_Guidelines_Brand_Size_Description_w_strategy_QA.csv"
			}
		},
		"variables": {
			"cluster_id": {
				"type": "String"
			},
			"wheel_name": {
				"type": "String"
			},
			"booly": {
				"type": "Boolean"
			},
			"boolstr": {
				"type": "String"
			}
		},
		"folder": {
			"name": "Alert 2"
		},
		"annotations": [],
		"lastPublishTime": "2022-10-05T15:38:22Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}