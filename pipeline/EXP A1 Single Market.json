{
	"name": "EXP A1 Single Market",
	"properties": {
		"activities": [
			{
				"name": "Alert1 Single Market",
				"type": "DatabricksNotebook",
				"dependsOn": [
					{
						"activity": "If Condition2",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebookPath": "/Shared/Alert1/adf_pipelines_notebooks/Alert1-QA-Golden-Key",
					"baseParameters": {
						"market": {
							"value": "@pipeline().parameters.market_list[0]",
							"type": "Expression"
						},
						"root": {
							"value": "@pipeline().parameters.root",
							"type": "Expression"
						},
						"stage": {
							"value": "@pipeline().parameters.stage",
							"type": "Expression"
						},
						"folder": {
							"value": "@pipeline().parameters.folder",
							"type": "Expression"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "adf_alert_1_dev_ep",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "If Condition1",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "Alert1 Single Market",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@not(bool(activity('Alert1 Single Market').output.runOutput.PRICE_PER_BOTTLE))",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "Fail1",
							"type": "Fail",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"message": "\"Failed validation\"",
								"errorCode": "500"
							}
						}
					]
				}
			},
			{
				"name": "Set variable1",
				"type": "SetVariable",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"variableName": "boolstr",
					"value": "False"
				}
			},
			{
				"name": "If Condition2",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "Set variable1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@not(bool(variables('boolstr')))",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "Fail2",
							"type": "Fail",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"message": "\"fail2\"",
								"errorCode": "500"
							}
						}
					]
				}
			}
		],
		"parameters": {
			"market_list": {
				"type": "array",
				"defaultValue": [
					"Texas"
				]
			},
			"root": {
				"type": "string",
				"defaultValue": "/mnt/dartread/EDW/AA/ALERTS"
			},
			"stage": {
				"type": "string",
				"defaultValue": "/DEV"
			},
			"folder": {
				"type": "string",
				"defaultValue": "/STATES"
			}
		},
		"variables": {
			"path_dim_prod": {
				"type": "String"
			},
			"path_FACT_AL": {
				"type": "String"
			},
			"path_dim_mark": {
				"type": "String"
			},
			"path_fact_aler": {
				"type": "String"
			},
			"path_miss_prod": {
				"type": "String"
			},
			"booly": {
				"type": "Boolean"
			},
			"boolstr": {
				"type": "String"
			}
		},
		"folder": {
			"name": "Alert 1/experiments"
		},
		"annotations": [],
		"lastPublishTime": "2022-09-21T12:06:07Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}