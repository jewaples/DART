{
	"name": "NIELSEN_IRI_DIM_PRODUCT_Spirit_File",
	"properties": {
		"description": "Move files from one folder to another folder",
		"activities": [
			{
				"name": "ForEachFile",
				"description": "Iterate each file, and move them one by one.",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "FilterFiles",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('FilterFiles').output.value",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "File_Lookup",
							"type": "Lookup",
							"dependsOn": [
								{
									"activity": "Get_SrcMetadata",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderStoredProcedureName": "[STG].[usp_FILE_LOOKUP]",
									"storedProcedureParameters": {
										"FILE_NAME": {
											"type": "String",
											"value": {
												"value": "@activity('Get_SrcMetadata').output.itemName",
												"type": "Expression"
											}
										},
										"TABLE_NAME": {
											"type": "String",
											"value": {
												"value": "@pipeline().parameters.Destination_Table",
												"type": "Expression"
											}
										}
									},
									"partitionOption": "None"
								},
								"dataset": {
									"referenceName": "RAD_File_Table_Destination",
									"type": "DatasetReference"
								},
								"firstRowOnly": true
							}
						},
						{
							"name": "If Condition",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "File_Lookup",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@activity('File_Lookup').output.firstRow.EXIST",
									"type": "Expression"
								},
								"ifFalseActivities": [
									{
										"name": "Insert_Source_Data",
										"description": "Inserts source file metadata in log table",
										"type": "SqlServerStoredProcedure",
										"dependsOn": [],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"storedProcedureName": "[LOGS].[usp_INSERT_SRC_FILES]",
											"storedProcedureParameters": {
												"FILE_NAME": {
													"value": {
														"value": "@item().name",
														"type": "Expression"
													},
													"type": "String"
												},
												"PIPELINE_ID": {
													"value": {
														"value": "@pipeline().RunId",
														"type": "Expression"
													},
													"type": "String"
												},
												"SOURCE": {
													"value": {
														"value": "@pipeline().parameters.SOURCE",
														"type": "Expression"
													},
													"type": "String"
												},
												"SRC_CREATED_DATE": {
													"value": {
														"value": "@activity('Get_SrcMetadata').output.lastModified",
														"type": "Expression"
													},
													"type": "String"
												},
												"SRC_PATH": {
													"value": {
														"value": "@pipeline().parameters.FolderPath_SourceStore",
														"type": "Expression"
													},
													"type": "String"
												},
												"SRC_SIZE": {
													"value": "0",
													"type": "String"
												},
												"TABLE_NAME": {
													"value": {
														"value": "@pipeline().parameters.Destination_Table",
														"type": "Expression"
													},
													"type": "String"
												}
											}
										},
										"linkedServiceName": {
											"referenceName": "NAM_COM_DART_SQL",
											"type": "LinkedServiceReference"
										}
									},
									{
										"name": "Get_AdlMetadata",
										"type": "GetMetadata",
										"dependsOn": [
											{
												"activity": "Insert_Source_Data",
												"dependencyConditions": [
													"Succeeded"
												]
											},
											{
												"activity": "Copy_File_FTP_Datalake",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"dataset": {
												"referenceName": "NIELSEN_IRI_File_Azure_Storage",
												"type": "DatasetReference",
												"parameters": {
													"path": {
														"value": "@concat(pipeline().parameters.FolderPath_DestinationStore,'Product/',formatDateTime(utcNow(), 'yyyyMMdd'), '/Spirits')",
														"type": "Expression"
													},
													"filename": "@replace(item().name, '.gz', '')"
												}
											},
											"fieldList": [
												"itemName",
												"size",
												"lastModified"
											]
										}
									},
									{
										"name": "Validate_Destination_Data",
										"description": "Inserts source file metadata in log table",
										"type": "SqlServerStoredProcedure",
										"dependsOn": [
											{
												"activity": "Get_AdlMetadata",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"storedProcedureName": "[STG].[usp_VALIDATE_DST_FILES]",
											"storedProcedureParameters": {
												"FILE_NAME": {
													"value": {
														"value": "@item().name",
														"type": "Expression"
													},
													"type": "String"
												},
												"DST_CREATED_DATE": {
													"value": {
														"value": "@activity('Get_AdlMetadata').output.lastModified",
														"type": "Expression"
													},
													"type": "String"
												},
												"DST_PATH": {
													"value": {
														"value": "@concat(pipeline().parameters.FolderPath_DestinationStore,'Product/',formatDateTime(utcNow(), 'yyyyMMdd'), '/Spirits')",
														"type": "Expression"
													},
													"type": "String"
												},
												"DST_SIZE": {
													"value": "0",
													"type": "String"
												},
												"TABLE_NAME": {
													"value": {
														"value": "@pipeline().parameters.Destination_Table",
														"type": "Expression"
													},
													"type": "String"
												},
												"IS_ZIP": {
													"value": {
														"value": "@pipeline().parameters.Is_Zip",
														"type": "Expression"
													},
													"type": "String"
												}
											}
										},
										"linkedServiceName": {
											"referenceName": "NAM_COM_DART_SQL",
											"type": "LinkedServiceReference"
										}
									},
									{
										"name": "Copy data Archive",
										"type": "Copy",
										"dependsOn": [
											{
												"activity": "Validate_Destination_Data",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "AzureBlobFSSource",
												"recursive": true
											},
											"sink": {
												"type": "AzureBlobFSSink"
											},
											"enableStaging": false
										},
										"inputs": [
											{
												"referenceName": "NIELSEN_IRI_UnzipFile_Azure_Storage",
												"type": "DatasetReference",
												"parameters": {
													"path": {
														"value": "@concat(pipeline().parameters.FolderPath_DestinationStore,'Product/',formatDateTime(utcNow(), 'yyyyMMdd'), '/Spirits')",
														"type": "Expression"
													},
													"filename": {
														"value": "@replace(item().name, '.gz', '')",
														"type": "Expression"
													}
												}
											}
										],
										"outputs": [
											{
												"referenceName": "NIELSEN_IRI_UnzipFile_Azure_Storage",
												"type": "DatasetReference",
												"parameters": {
													"path": {
														"value": "@concat(pipeline().parameters.FolderPath_DestinationStore,'Archive/',formatDateTime(utcNow(), 'yyyyMMdd'))",
														"type": "Expression"
													},
													"filename": {
														"value": "@replace(item().name, '.gz', '')",
														"type": "Expression"
													}
												}
											}
										]
									},
									{
										"name": "Copy_File_FTP_Datalake",
										"description": "Copy a file from the source store to the destination store.",
										"type": "Copy",
										"dependsOn": [],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "BinarySource",
												"storeSettings": {
													"type": "FtpReadSettings",
													"recursive": true,
													"useBinaryTransfer": true,
													"disableChunking": false
												},
												"formatSettings": {
													"type": "BinaryReadSettings"
												}
											},
											"sink": {
												"type": "AzureBlobFSSink"
											},
											"enableStaging": false,
											"dataIntegrationUnits": 0
										},
										"inputs": [
											{
												"referenceName": "NIELSEN_IRI_File_FTP_2",
												"type": "DatasetReference",
												"parameters": {
													"path": {
														"value": "@pipeline().parameters.FolderPath_SourceStore",
														"type": "Expression"
													},
													"file": "@item().name"
												}
											}
										],
										"outputs": [
											{
												"referenceName": "NIELSEN_IRI_Folder_Azure_Storage",
												"type": "DatasetReference",
												"parameters": {
													"path": {
														"value": "@concat(pipeline().parameters.FolderPath_DestinationStore,'Product/',formatDateTime(utcNow(), 'yyyyMMdd'), '/Spirits')",
														"type": "Expression"
													}
												}
											}
										]
									},
									{
										"name": "Delete File from source",
										"type": "Delete",
										"dependsOn": [
											{
												"activity": "Copy data Archive",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"dataset": {
												"referenceName": "NIELSEN_IRI_File_FTP_2",
												"type": "DatasetReference",
												"parameters": {
													"path": "@pipeline().parameters.FolderPath_SourceStore",
													"file": "@item().name"
												}
											},
											"enableLogging": false,
											"storeSettings": {
												"type": "FtpReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false,
												"useBinaryTransfer": true,
												"disableChunking": false
											}
										}
									}
								]
							}
						},
						{
							"name": "Get_SrcMetadata",
							"type": "GetMetadata",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "NIELSEN_IRI_File_FTP_2",
									"type": "DatasetReference",
									"parameters": {
										"path": {
											"value": "@pipeline().parameters.FolderPath_SourceStore",
											"type": "Expression"
										},
										"file": "@item().name"
									}
								},
								"fieldList": [
									"itemName",
									"lastModified"
								],
								"storeSettings": {
									"type": "FtpReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false,
									"useBinaryTransfer": true,
									"disableChunking": false
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							}
						}
					]
				}
			},
			{
				"name": "FilterFiles",
				"description": "Only files will be selected, the sub-folders will not be selected.",
				"type": "Filter",
				"dependsOn": [
					{
						"activity": "GetFileList",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('GetFileList').output.childItems",
						"type": "Expression"
					},
					"condition": {
						"value": "@contains(item().name,'UPC_Weekly_prdc_')",
						"type": "Expression"
					}
				}
			},
			{
				"name": "GetFileList",
				"type": "GetMetadata",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "NIELSEN_IRI_File_FTP_2",
						"type": "DatasetReference",
						"parameters": {
							"path": {
								"value": "@pipeline().parameters.FolderPath_SourceStore",
								"type": "Expression"
							},
							"file": "StdMarkets_SpiritsUPC_Weekly_prdc_ref_*"
						}
					},
					"fieldList": [
						"itemName",
						"childItems"
					],
					"storeSettings": {
						"type": "FtpReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false,
						"useBinaryTransfer": true,
						"disableChunking": false
					},
					"formatSettings": {
						"type": "BinaryReadSettings"
					}
				}
			}
		],
		"parameters": {
			"FolderPath_SourceStore": {
				"type": "String",
				"defaultValue": "/ad_hoc"
			},
			"FolderPath_DestinationStore": {
				"type": "String",
				"defaultValue": "/prod/landing/NIELSEN/"
			},
			"Destination_Table": {
				"type": "string",
				"defaultValue": "LOGS.SOURCE_FILES_LOAD_LOG"
			},
			"Is_Zip": {
				"type": "string",
				"defaultValue": "1"
			},
			"STARTDATE": {
				"type": "string"
			},
			"SOURCE": {
				"type": "string",
				"defaultValue": "Nielsen"
			},
			"Stage_table": {
				"type": "string",
				"defaultValue": "NIELSEN.DIM_PRODUCT"
			},
			"FolderPath_SourceStore_Wine": {
				"type": "string",
				"defaultValue": "/ad_hoc_wine"
			},
			"FolderPath_SourceStore1": {
				"type": "string",
				"defaultValue": "/prod/Nielsen_IRI/"
			}
		},
		"folder": {
			"name": "NIELSEN/FILES_COPY"
		},
		"annotations": [],
		"lastPublishTime": "2022-06-06T20:10:01Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}